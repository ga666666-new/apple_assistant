name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [18.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Build Electron app
      run: npm run build:electron
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: apple-assistant-${{ matrix.os }}
        path: |
          release/
          !release/node_modules/
          
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/apple-assistant-macos-latest/release/*.dmg
          artifacts/apple-assistant-macos-latest/release/*.zip
          artifacts/apple-assistant-ubuntu-latest/release/*.AppImage
          artifacts/apple-assistant-ubuntu-latest/release/*.deb
          artifacts/apple-assistant-windows-latest/release/*.exe
          artifacts/apple-assistant-windows-latest/release/*.msi
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 